{
  "swagger": "2.0",
  "info": {
    "title": "TAM Rest API",
    "description": "API for the TAM Montpellier public transport system",
    "version": "1.0.0"
  },
  "host": "tam.alexis-mateo.fr",
  "basePath": "/",
  "tags": [
    {
      "name": "Stop",
      "description": "Operations about stops"
    },
    {
      "name": "Line",
      "description": "Operations about lines"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/stop/schedule/{station}/{line}/{direction}": {
      "get": {
        "tags": [
          "Stop"
        ],
        "summary": "Get the schedule of a station for a line and a direction.",
        "description": "",
        "parameters": [
          {
            "name": "station",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "line",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stop/next/{station}": {
      "get": {
        "tags": [
          "Stop"
        ],
        "summary": "Get next trams at a station. You can filter by line and destination.",
        "description": "",
        "parameters": [
          {
            "name": "station",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "line",
            "in": "query",
            "type": "string"
          },
          {
            "name": "destination",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/stop/{station}/related": {
      "get": {
        "tags": [
          "Stop"
        ],
        "summary": "Get related line to a station.",
        "description": "",
        "parameters": [
          {
            "name": "station",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/stop/located": {
      "post": {
        "tags": [
          "Stop"
        ],
        "summary": "Get stops located near a point.",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Coordinates of the point",
            "schema": {
              "type": "object",
              "properties": {
                "lat": {
                  "type": "number",
                  "example": 0
                },
                "lon": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/line/geojson/{line}/{direction}": {
      "get": {
        "tags": [
          "Line"
        ],
        "summary": "Get GeoJSON of a line",
        "description": "",
        "parameters": [
          {
            "name": "line",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/line/{line}/{direction}": {
      "get": {
        "tags": [
          "Line"
        ],
        "summary": "Get line informations like stops, bounds, etc.",
        "description": "",
        "parameters": [
          {
            "name": "line",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/line/": {
      "get": {
        "tags": [
          "Line"
        ],
        "summary": "Get all lines",
        "description": "",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/search/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/itinerary/": {
      "get": {
        "tags": [
          "Itinerary"
        ],
        "summary": "Get itinerary from stop to stop",
        "description": "",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}